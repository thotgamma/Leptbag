#version 330 core

// Interpolated values from the vertex shaders
in vec3 fragmentColor;
in vec3 Normal;


// Ouput data
out vec3 color;

uniform vec3 LightColor;
uniform float LightPower;
uniform vec3 LightDirection;


void main(){

	vec3 LightColor = vec3(1, 1, 1);
	float LightPower = 1.0f;

	vec3 LightDirection = vec3(-1, 1, 0);

	vec3 MaterialDiffuseColor = fragmentColor;
	vec3 MaterialAmbientColor = vec3(0.5, 0.5, 0.5) * MaterialDiffuseColor;


	vec3 n = normalize(Normal);
	vec3 l = normalize(LightDirection);
	float cosTheta = clamp(dot(n, l), 0, 1);


	color = MaterialAmbientColor
		  + MaterialDiffuseColor * LightColor * LightPower * cosTheta;

}
